-- Understand and walk through the tables to understand the Data

Select * from athlete_events

Select Distinct athlete_id from athlete_events
--4930
Select Distinct city from athlete_events
--42
Select Distinct season from athlete_events
-- 2 Summer, Winter
Select Distinct games from athlete_events 
--51 games
Select Distinct sport from athlete_events 
-- 57
Select Distinct year from athlete_events 
-- 35
Select Min(year), Max(year) from athlete_events 
-- 1896 to 2016
Select DISTINCT event from athlete_events
-- 579
Select DISTINCT medal from athlete_events
-- 4 Gold, Silver, Bronze, NA
Select sport, Count(event) from athlete_events 
group by sport
Select games, Count(sport), Count(event) from athlete_events 
group by games

Select * from athletes
Select distinct id from athletes
--65,535
Select distinct name from athletes
-65,196
Select name from athletes
group by name
having count(name) > 1
--293
Select distinct team from athletes
-- 844

Select * from athlete_events
Select * from athletes

--1 which team has won the maximum gold medals over the years.


select top 1  team, count(distinct event) as cnt from athlete_events ae
inner join athletes a on ae.athlete_id=a.id
where medal='Gold'
group by team
order by cnt desc

--2 for each team print total silver medals and year in which they won maximum silver medal..output 3 columns
-- team,total_silver_medals, year_of_max_silver


with cte as (
select a.team, ae.year, count(distinct event) as silver_medals
,rank() over(partition by team order by count(distinct event) desc) as rn
from athlete_events ae
inner join athletes a on ae.athlete_id=a.id
where medal='Silver'
group by a.team, ae.year)
select team,sum(silver_medals) as total_silver_medals, max(case when rn=1 then year end) as  year_of_max_silver
from cte
group by team;


--3 which player has won maximum gold medals  amongst the players 
--which have won only gold medal (never won silver or bronze) over the years

with cte as (
select name,medal
from athlete_events ae
inner join athletes a on ae.athlete_id=a.id)
select top 1 name , count(1) as no_of_gold_medals
from cte 
where name not in (select distinct name from cte where medal in ('Silver','Bronze'))
and medal='Gold'
group by name
order by no_of_gold_medals desc

--4 in each year which player has won maximum gold medal . Write a query to print year,player name 
--and no of golds won in that year . In case of a tie print comma separated player names.

with cte1 as 
(Select ae.year, a.name, Count(1) as no_of_golds
from athlete_events ae
inner join athletes a on ae.athlete_id=a.id 
where medal = 'Gold'
group by year, name) 
Select year, no_of_golds, STRING_AGG(name, ',') as players from 
(Select *, rank() over (Partition by year order by no_of_golds Desc) as rn
from cte1) a 
where rn = 1
Group by year, no_of_golds

--5 in which event and year India has won its first gold medal,first silver medal and first bronze medal
--print 3 columns medal,year,sport

select distinct * from (
select medal,year,event,rank() over(partition by medal order by year) rn
from athlete_events ae
inner join athletes a on ae.athlete_id=a.id
Where team='India' and medal != 'NA'
) A
Where rn=1

--6 find players who won gold medal in summer and winter olympics both.

select a.name
from athlete_events ae
inner join athletes a on ae.athlete_id=a.id
where medal='Gold'
Group By a.name 
Having count(distinct season)=2


--7 find players who won gold, silver and bronze medal in a single olympics. print player name along with year.

select year,name
from athlete_events ae
inner join athletes a on ae.athlete_id=a.id
where medal != 'NA'
group by year,name having count(distinct medal)=3

--8 find players who have won gold medals in consecutive 3 summer olympics in the same event . Consider only olympics 2000 onwards. 
--Assume summer olympics happens every 4 year starting 2000. print player name and event name.

with cte as (
select name,year,event
from athlete_events ae
inner join athletes a on ae.athlete_id=a.id
where year >=2000 and season='Summer'and medal = 'Gold'
group by name,year,event)
select * from
(select *, lag(year) over(partition by name,event order by year ) as prev_year
, lead(year) over(partition by name,event order by year ) as next_year
from cte) A
where year=prev_year+4 and year=next_year-4
